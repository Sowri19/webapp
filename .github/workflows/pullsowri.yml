# This is a basic workflow to help you get started with Actions
name: DeployToAWS
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch.
  push:
    branches: [ testing ]
 
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Run a one-line script
        run: echo Hello, world!
      - name: Run a multi-line script
        run: |
              echo Add other actions to build,
              echo test, and deploy your project.
      - name: Setup Packer
        uses: hashicorp-contrib/setup-packer@v1.0.0
      - name: Zip all the webapp imp files
        run: |
              zip -r webapp.zip ./
              pwd ./webapp
      - name: Run packer commands
        run: |
              cd Packer
              packer init .
              packer fmt .
              packer validate .
              packer build .
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}      #dev for building    
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-1"

      - name: AWS Root Credential Configure
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ROOT_ACCESS_KEY_ID }} #root
          aws-secret-access-key: ${{ secrets.ROOT_SECRET_ACCESS_KEY}}
          aws-region: "us-east-1"
      - name: AWS CLI
        run: |
              ID=$(jq -r '.builds[-1].artifact_id' manifest.json | cut -d ":" -f2)
              aws ec2 create-launch-template-version --launch-template-name asg_launch_config --source-version 1 --launch-template-data "ImageId"=$ID"
              aws autoscaling update-auto-scaling-group --auto-scaling-group-name autoscalinggroup-assignment09 --launch-template LaunchTemplateName=asg_launch_config,Version='$Latest'
              aws autoscaling start-instance-refresh --auto-scaling-group-name autoscalinggroup-assignment09
            